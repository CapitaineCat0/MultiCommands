plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
}

def version = '1.4.3'

shadowJar {
    archiveName = "MultiCommands.jar"
}

repositories {
    mavenCentral()
    maven { url = 'https://jitpack.io/' } // Maven | Vault
    maven { url = 'https://oss.sonatype.org/content/groups/public/' } // Maven
    maven { url = 'https://repo.extendedclip.com/content/repositories/placeholderapi/' } // PlaceHolderAPI
    maven { url = 'https://repo.papermc.io/repository/maven-public/' } // PaperMC
}

dependencies {
    shadow 'io.papermc.paper:paper-api:1.18-R0.1-SNAPSHOT' // PaperMC
    compileOnly 'me.clip:placeholderapi:2.11.2' // PlaceHolderAPI
    compileOnly 'net.luckperms:api:5.0' // LuckPerms
    shadow fileTree(dir: 'libs', include: '*.jar') // Fichier de build
    implementation 'com.google.code.gson:gson:2.10.1' // Json
    implementation 'net.kyori:adventure-platform-bukkit:4.3.0' // Adventure
    implementation 'net.kyori:adventure-api:4.13.1' // Adventure
    implementation "net.kyori:adventure-text-minimessage:4.14.0" // Adventure
    compileOnly("com.github.MilkBowl:VaultAPI:1.7.1" ){  // Vault
        exclude group: "org.bukkit", module: "bukkit"
    }
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}


processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}
test{
    systemProperty("file.encoding", "utf-8")
}

compileJava.options.encoding = 'UTF-8'
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}